{"version":3,"sources":["median.js"],"names":["getMedian","getForEven","arr","index","getForOdd","getValue","isEven","isInteger","num","toString","indexOf","Array","isArray","Error","every","Number","isFinite","v","length","sortedArr","sort","a","b","middle","Math","floor"],"mappings":";;;;;kBA+BwBA;AA/BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,UAAT,CAAqBC,GAArB,EAA0BC,KAA1B,EAAiC;AAC/B,SAAO,CAACD,IAAIC,KAAJ,IAAaD,IAAIC,QAAQ,CAAZ,CAAd,IAAgC,CAAvC;AACD;;AAED,SAASC,SAAT,CAAoBF,GAApB,EAAyBC,KAAzB,EAAgC;AAC9B,SAAOD,IAAIC,KAAJ,CAAP;AACD;;AAED,SAASE,QAAT,CAAmBC,MAAnB,EAA2BJ,GAA3B,EAAgCC,KAAhC,EAAuC;AACrC,SAAO,CAACG,SAASL,UAAT,GAAsBG,SAAvB,EAAkCF,GAAlC,EAAuCC,KAAvC,CAAP;AACD;;AAED,SAASI,SAAT,CAAoBC,GAApB,EAAyB;AACvB,MAAI,CAACA,GAAL,EAAU,MAAM,4BAAN;AACV,SAAOA,IAAIC,QAAJ,GAAeC,OAAf,CAAuB,GAAvB,MAAgC,CAAC,CAAxC;AACD;;AAEc,SAASV,SAAT,CAAoBE,GAApB,EAAyB;AACtC,MAAI,CAACS,MAAMC,OAAN,CAAcV,GAAd,CAAL,EAAyB,MAAM,IAAIW,KAAJ,CAAU,sCAAV,CAAN;AACzB,MAAI,CAACX,IAAIY,KAAJ,CAAU;AAAA,WAAKC,OAAOC,QAAP,CAAgBC,CAAhB,KAAsBV,UAAUU,CAAV,CAA3B;AAAA,GAAV,CAAL,EAAyD,MAAM,IAAIJ,KAAJ,CAAU,mDAAV,CAAN;AACzD,MAAIX,IAAIgB,MAAJ,KAAe,CAAnB,EAAsB,MAAM,IAAIL,KAAJ,CAAU,2BAAV,CAAN;AACtB,MAAIX,IAAIgB,MAAJ,GAAa,CAAjB,EAAoB,MAAM,IAAIL,KAAJ,CAAU,mDAAV,CAAN;;AAEpB,MAAIX,IAAIgB,MAAJ,KAAe,CAAnB,EAAsB,OAAO,CAAC,CAAR;;AAEtB,MAAMC,YAAYjB,IAAIkB,IAAJ,CAAS,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,IAAIC,CAAd;AAAA,GAAT,CAAlB;AACA,MAAMhB,SAASJ,IAAIgB,MAAJ,GAAa,CAAb,KAAmB,CAAlC;AACA,MAAMK,SAASC,KAAKC,KAAL,CAAWvB,IAAIgB,MAAJ,GAAa,CAAxB,CAAf;;AAEA,SAAOb,SAASC,MAAT,EAAiBa,SAAjB,EAA4BI,MAA5B,CAAP;AACD","file":"lib.js","sourcesContent":["// export default function getMedian (arr) {\n//   if (!arr.length) {\n//     return 0\n//   }\n//\n//   if (arr.length === 1) return -1\n//\n//   const numbers = arr.slice(0).sort((a, b) => a - b)\n//   const middle = Math.floor(numbers.length / 2)\n//   const isEven = numbers.length % 2 === 0\n//\n//   return isEven ? (numbers[middle] + numbers[middle - 1]) / 2 : numbers[middle]\n// }\n\nfunction getForEven (arr, index) {\n  return (arr[index] + arr[index - 1]) / 2\n}\n\nfunction getForOdd (arr, index) {\n  return arr[index]\n}\n\nfunction getValue (isEven, arr, index) {\n  return (isEven ? getForEven : getForOdd)(arr, index)\n}\n\nfunction isInteger (num) {\n  if (!num) throw 'isInteger: value undefined'\n  return num.toString().indexOf('.') === -1\n}\n\nexport default function getMedian (arr) {\n  if (!Array.isArray(arr)) throw new Error('getMedian: argument must be an array')\n  if (!arr.every(v => Number.isFinite(v) && isInteger(v))) throw new Error('getMedian: array may contain integer numbers only')\n  if (arr.length === 0) throw new Error('getMedian: array is empty')\n  if (arr.length > 3) throw new Error('getMedian: array can\\'t contain more than 3 items')\n\n  if (arr.length === 1) return -1\n\n  const sortedArr = arr.sort((a, b) => a - b)\n  const isEven = arr.length % 2 === 0\n  const middle = Math.floor(arr.length / 2)\n\n  return getValue(isEven, sortedArr, middle)\n}\n"]}