{"version":3,"sources":["core.js","files.js","median.js","repl.js","slider.js"],"names":["getSlides","require","getMedian","module","exports","makeMedianArr","content","slideSize","arr","makeArr","slides","result","forEach","push","v","string","split","map","fs","readFile","path","cb","encoding","writeFile","data","getForEven","index","getForOdd","getValue","isEven","isInteger","num","toString","indexOf","Array","isArray","Error","every","Number","isFinite","length","sortedArr","sort","a","b","middle","Math","floor","files","repl","process","argv","console","log","exit","input","output","err","contents","onWriteDone","getSlideBody","size","i","from","to","slice","getSlideTail","unshift","bodyArr","tailArr","concat"],"mappings":"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","file":"lib.js","sourcesContent":["const getSlides = require('./slider')\nconst getMedian = require('./median')\n\nmodule.exports = function makeMedianArr (content) {\n  const slideSize = 3\n  const arr = makeArr(content)\n  const slides = getSlides(arr, slideSize)\n  const result = []\n\n  slides.forEach(v => result.push(getMedian(v)))\n\n  return result\n}\n\nfunction makeArr (string) {\n  return string.split('\\n\\n').map(v => +v)\n}\n","const fs = require('fs')\n\nmodule.exports = {\n  readFile (path, cb, encoding = 'utf8') {\n    return fs.readFile(path, encoding, cb)\n  },\n  writeFile (path, data, cb) {\n    // TODO (S.Panfilov) implement\n  }\n}\n","function getForEven (arr, index) {\n  return (arr[index] + arr[index - 1]) / 2\n}\n\nfunction getForOdd (arr, index) {\n  return arr[index]\n}\n\nfunction getValue (isEven, arr, index) {\n  return (isEven ? getForEven : getForOdd)(arr, index)\n}\n\nfunction isInteger (num) {\n  if (!num) throw 'isInteger: value undefined'\n  return num.toString().indexOf('.') === -1\n}\n\nmodule.exports = function getMedian (arr) {\n  if (!Array.isArray(arr)) throw new Error('getMedian: argument must be an array')\n  if (!arr.every(v => Number.isFinite(v) && isInteger(v))) throw new Error('getMedian: array may contain integer numbers only')\n  if (arr.length === 0) throw new Error('getMedian: array is empty')\n  if (arr.length > 3) throw new Error('getMedian: array can\\'t contain more than 3 items')\n\n  // TODO (S.Panfilov) this check gonna be in repl instead of median\n  if (arr.length === 1) return -1\n\n  const sortedArr = arr.sort((a, b) => a - b)\n  const isEven = arr.length % 2 === 0\n  const middle = Math.floor(arr.length / 2)\n\n  return getValue(isEven, sortedArr, middle)\n}\n","const files = require('./files')\nconst makeMedianArr = require('./core')\n\nmodule.exports = function repl () {\n  if (process.argv.length < 3) {\n    console.log('Usage: node ' + process.argv[1] + ' FILENAME')\n    process.exit(1)\n  }\n\n  const input = process.argv[2]\n  const output = './output'\n\n  files.readFile(input, (err, contents) => {\n    // if (err) throw 'REPL: can\\'t read file'\n    if (err) throw err\n    const arr = makeMedianArr(contents)\n    files.writeFile(output, arr, () => onWriteDone(output))\n  })\n\n}\n\n// function onReady (err, contents) {\n//   core()\n// }\n\nfunction onWriteDone (path) {\n  console.log(`Done: ${path}`)\n}\n\n// module.exports = repl\n","function getSlideBody (arr, size) {\n  const result = []\n  arr.forEach((v, i) => {\n    let from = i\n    let to = from + size\n    result.push(arr.slice(from, to))\n  })\n\n  return result\n}\n\nfunction getSlideTail (arr, size) {\n  const result = []\n  for (let i = size; i > 1; i--) {\n    if (arr.length > i - 1) result.unshift(arr.slice(0, i - 1))\n  }\n\n  return result\n}\n\nmodule.exports = function getSlides (arr, size = 3) {\n  if (!arr || arr.length === 0) return []\n\n  const bodyArr = getSlideBody(arr, size)\n  const tailArr = getSlideTail(arr, size)\n\n  return tailArr.concat(bodyArr)\n}\n"]}